package processors;

import junit.framework.TestCase;
// JUnitDoclet begin import
import media.processors.BufferProcessorImpl;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class BufferProcessorImplTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  media.processors.BufferProcessorImpl bufferprocessorimpl = null;
  // JUnitDoclet end class
  
  public BufferProcessorImplTest(String name) {
    // JUnitDoclet begin method BufferProcessorImplTest
    super(name);
    // JUnitDoclet end method BufferProcessorImplTest
  }
  
  public media.processors.BufferProcessorImpl createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return BufferProcessorImpl.createInstance();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    bufferprocessorimpl = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    bufferprocessorimpl = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testCreateInstance() throws Exception {
    // JUnitDoclet begin method createInstance
    // JUnitDoclet end method createInstance
  }
  
  public void testProcess() throws Exception {
    // JUnitDoclet begin method process
    // JUnitDoclet end method process
  }
  
  public void testRun() throws Exception {
    // JUnitDoclet begin method run
    // JUnitDoclet end method run
  }
  
  public void testGetData() throws Exception {
    // JUnitDoclet begin method getData
    // JUnitDoclet end method getData
  }
  
  public void testSetWidth() throws Exception {
    // JUnitDoclet begin method setWidth
    // JUnitDoclet end method setWidth
  }
  
  public void testSetIsProcessing() throws Exception {
    // JUnitDoclet begin method setProcessing isProcessing
    boolean[] tests = {true, false};
    
    for (int i = 0; i < tests.length; i++) {
      bufferprocessorimpl.setProcessing(tests[i]);
      assertEquals(tests[i], bufferprocessorimpl.isProcessing());
    }
    // JUnitDoclet end method setProcessing isProcessing
  }
  
  public void testSetImageData() throws Exception {
    // JUnitDoclet begin method setImageData
    // JUnitDoclet end method setImageData
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(BufferProcessorImplTest.class);
    // JUnitDoclet end method testcase.main
  }
}
