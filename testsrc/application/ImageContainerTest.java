package application;

import junit.framework.TestCase;
// JUnitDoclet begin import
import application.ImageContainer;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class ImageContainerTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  application.ImageContainer imagecontainer = null;
  // JUnitDoclet end class
  
  public ImageContainerTest(String name) {
    // JUnitDoclet begin method ImageContainerTest
    super(name);
    // JUnitDoclet end method ImageContainerTest
  }
  
  public application.ImageContainer createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new application.ImageContainer();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    imagecontainer = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    imagecontainer = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testSetGetOriginalImage() throws Exception {
    // JUnitDoclet begin method setOriginalImage getOriginalImage
    short[][] tests = {new short[0] , null};
    
    for (int i = 0; i < tests.length; i++) {
      imagecontainer.setOriginalImage(tests[i]);
      assertEquals(tests[i], imagecontainer.getOriginalImage());
    }
    // JUnitDoclet end method setOriginalImage getOriginalImage
  }
  
  public void testSetGetProcessedImage() throws Exception {
    // JUnitDoclet begin method setProcessedImage getProcessedImage
    double[][] tests = {new double[0] , null};
    
    for (int i = 0; i < tests.length; i++) {
      imagecontainer.setProcessedImage(tests[i]);
      assertEquals(tests[i], imagecontainer.getProcessedImage());
    }
    // JUnitDoclet end method setProcessedImage getProcessedImage
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(ImageContainerTest.class);
    // JUnitDoclet end method testcase.main
  }
}
