package calculation.splitters;

import junit.framework.TestCase;
import media.image.CloudImage;
import media.image.producer.FileClasspathImageProducer;
import util.VisualiseSplitterLocation;

// JUnitDoclet end import

/**
 * Generated by JUnitDoclet, a tool provided by ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org and www.objectfab.de for
 * informations about the tool, the licence and the authors.
 */

public class SlidingWindowSplitterTest
// JUnitDoclet begin extends_implements
        extends TestCase
// JUnitDoclet end extends_implements
{
    // JUnitDoclet begin class
    calculation.splitters.SlidingWindowSplitter slidingwindowsplitter = null;

    // JUnitDoclet end class

    public SlidingWindowSplitterTest(String name) {
        // JUnitDoclet begin method SlidingWindowSplitterTest
        super(name);
        // JUnitDoclet end method SlidingWindowSplitterTest
    }

    public calculation.splitters.SlidingWindowSplitter createInstance()
            throws Exception {
        // JUnitDoclet begin method testcase.createInstance
        return new calculation.splitters.SlidingWindowSplitter();
        // JUnitDoclet end method testcase.createInstance
    }

    protected void setUp() throws Exception {
        // JUnitDoclet begin method testcase.setUp
        super.setUp();
        slidingwindowsplitter = createInstance();
        // JUnitDoclet end method testcase.setUp
    }

    protected void tearDown() throws Exception {
        // JUnitDoclet begin method testcase.tearDown
        slidingwindowsplitter = null;
        super.tearDown();
        // JUnitDoclet end method testcase.tearDown
    }

    public void testSplit() throws Exception {
        // JUnitDoclet begin method split
        double[] data = { 0, 0, 0, 0, 0, 0, 0, 0, 50, 100, 100, 100, 100, 100,
                100, 100, 100 };
        int location = slidingwindowsplitter.split(data);
        assertEquals(8.0, location, 0.0);

        double[] data2 = { 0.0, 0.0, 50.0, 100.0, 100.0 };
        location = slidingwindowsplitter.split(data2);
        assertEquals(2, location, 0.0);

        FileClasspathImageProducer producer = new FileClasspathImageProducer(
                "unit test", "/current_min_daylight.jpg");
        CloudImage image = producer.produceContent();
        double[] datax = image.getMonochromeData();
        location = slidingwindowsplitter.split(datax);
//        VisualiseSplitterLocation.showImage(image, location);

        assertEquals(7704, location);
        // JUnitDoclet end method split
    }

    /**
     * JUnitDoclet moves marker to this method, if there is not match for them
     * in the regenerated code and if the marker is not empty. This way, no test
     * gets lost when regenerating after renaming. Method testVault is supposed
     * to be empty.
     */
    public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
    }

    public static void main(String[] args) {
        // JUnitDoclet begin method testcase.main
        junit.textui.TestRunner.run(SlidingWindowSplitterTest.class);
        // JUnitDoclet end method testcase.main
    }
}
