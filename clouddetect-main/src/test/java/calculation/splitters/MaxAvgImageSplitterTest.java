package calculation.splitters;

import calculation.splitters.AbstractGenericImageSplitter;
import calculation.splitters.MaxAvgImageSplitter;
import calculation.splitters.Splitter;
import junit.framework.TestCase;
import media.image.CloudImageResult;
import media.image.CloudImageResultImpl;

// JUnitDoclet end import

/**
 * Generated by JUnitDoclet, a tool provided by ObjectFab GmbH under LGPL.
 * Please see www.junitdoclet.org, www.gnu.org and www.objectfab.de for
 * informations about the tool, the licence and the authors.
 */

public class MaxAvgImageSplitterTest
// JUnitDoclet begin extends_implements
        extends TestCase
// JUnitDoclet end extends_implements
{
    // JUnitDoclet begin class
    Splitter maxmedianmetric = null;

    // JUnitDoclet end class

    public MaxAvgImageSplitterTest(String name) {
        // JUnitDoclet begin method MaxMedianMetricTest
        super(name);
        // JUnitDoclet end method MaxMedianMetricTest
    }

    public calculation.splitters.MaxMedianImageSplitter createInstance()
            throws Exception {
        // JUnitDoclet begin method testcase.createInstance
        return new calculation.splitters.MaxMedianImageSplitter();
        // JUnitDoclet end method testcase.createInstance
    }

    protected void setUp() throws Exception {
        // JUnitDoclet begin method testcase.setUp
        super.setUp();
        maxmedianmetric = createInstance();
        // JUnitDoclet end method testcase.setUp
    }

    public void testMaxMedian() {
        double[] data = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
                16, 17, 18, 19, 20 };
        AbstractGenericImageSplitter metric = new MaxAvgImageSplitter();
        CloudImageResult image = new CloudImageResultImpl(data, 5, 4, false);
        metric.split(image);
        assertEquals(9.88888888888889, metric.getResult(), 0.0);
        // strange but acceptable
        assertEquals(1, metric.getBestSplitterLocation());

        double[] data2 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 110, 120, 130, 140,
                150, 160, 170, 180, 190, 200 };
        metric = new MaxAvgImageSplitter();
        image = new CloudImageResultImpl(data2, 5, 4, false);
        metric.split(image);
        assertEquals(132.77777777777777, metric.getResult(), 0.0);
        // it splits in the middle as it should
        assertEquals(10, metric.getBestSplitterLocation());
    }

    protected void tearDown() throws Exception {
        // JUnitDoclet begin method testcase.tearDown
        maxmedianmetric = null;
        super.tearDown();
        // JUnitDoclet end method testcase.tearDown
    }

    /**
     * JUnitDoclet moves marker to this method, if there is not match for them
     * in the regenerated code and if the marker is not empty. This way, no test
     * gets lost when regenerating after renaming. Method testVault is supposed
     * to be empty.
     */
    public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault

    // JUnitDoclet end method testcase.testVault
    }

    public static void main(String[] args) {
        // JUnitDoclet begin method testcase.main
        junit.textui.TestRunner.run(MaxAvgImageSplitterTest.class);
        // JUnitDoclet end method testcase.main
    }
}
