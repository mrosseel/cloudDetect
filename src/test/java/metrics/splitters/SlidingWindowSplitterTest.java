package metrics.splitters;

import junit.framework.TestCase;
// JUnitDoclet begin import
import media.image.CloudImage;
import metrics.LineMedianDifferenceMetric;
import metrics.Metric;
import metrics.splitters.SlidingWindowSplitter;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class SlidingWindowSplitterTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  metrics.splitters.SlidingWindowSplitter slidingwindowsplitter = null;
  // JUnitDoclet end class
  
  public SlidingWindowSplitterTest(String name) {
    // JUnitDoclet begin method SlidingWindowSplitterTest
    super(name);
    // JUnitDoclet end method SlidingWindowSplitterTest
  }
  
  public metrics.splitters.SlidingWindowSplitter createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new metrics.splitters.SlidingWindowSplitter();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    slidingwindowsplitter = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    slidingwindowsplitter = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testSplit() throws Exception {
    // JUnitDoclet begin method split
      double[] data = { 0, 0, 0, 0, 0, 0, 0, 0, 50, 100, 100, 100, 100, 100, 100,
              100, 100 };
      int location = slidingwindowsplitter.split(data);
      assertEquals(8.0, location, 0.0);
      
      double[] data2={0.0, 0.0, 50.0, 100.0, 100.0};
      location = slidingwindowsplitter.split(data2);
      assertEquals(2, location, 0.0);
    // JUnitDoclet end method split
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(SlidingWindowSplitterTest.class);
    // JUnitDoclet end method testcase.main
  }
}
