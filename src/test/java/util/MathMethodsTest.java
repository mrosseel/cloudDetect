package util;

import junit.framework.TestCase;
// JUnitDoclet begin import
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class MathMethodsTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  util.MathMethods mathmethods = null;
  // JUnitDoclet end class
  
  public MathMethodsTest(String name) {
    // JUnitDoclet begin method MathMethodsTest
    super(name);
    // JUnitDoclet end method MathMethodsTest
  }
  
  public util.MathMethods createInstance() throws Exception {
    // JUnitDoclet begin method testcase.createInstance
    return new util.MathMethods();
    // JUnitDoclet end method testcase.createInstance
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    mathmethods = createInstance();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    mathmethods = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testInclination() throws Exception {
    // JUnitDoclet begin method inclination
    // JUnitDoclet end method inclination
  }
  
  public void testInclinationTrue() throws Exception {
    // JUnitDoclet begin method inclinationTrue
    // JUnitDoclet end method inclinationTrue
  }
  
  public void testMeanSquareError() throws Exception {
    // JUnitDoclet begin method meanSquareError
    // JUnitDoclet end method meanSquareError
  }
  
  public void testInftySqrDistance() throws Exception {
    // JUnitDoclet begin method inftySqrDistance
    // JUnitDoclet end method inftySqrDistance
  }
  
  public void testMissSqrDistance() throws Exception {
    // JUnitDoclet begin method missSqrDistance
    // JUnitDoclet end method missSqrDistance
  }
  
  public void testSqrDistance() throws Exception {
    // JUnitDoclet begin method sqrDistance
    // JUnitDoclet end method sqrDistance
  }
  
  public void testRound() throws Exception {
    // JUnitDoclet begin method round
    // JUnitDoclet end method round
  }
  
  public void testTranspose() throws Exception {
    // JUnitDoclet begin method transpose
    // JUnitDoclet end method transpose
  }
  
  public void testGcd() throws Exception {
    // JUnitDoclet begin method gcd
    // JUnitDoclet end method gcd
  }
  
  public void testToUniformSphere() throws Exception {
    // JUnitDoclet begin method toUniformSphere
    // JUnitDoclet end method toUniformSphere
  }
  
  public void testNorm() throws Exception {
    // JUnitDoclet begin method norm
    // JUnitDoclet end method norm
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(MathMethodsTest.class);
    // JUnitDoclet end method testcase.main
  }
}
